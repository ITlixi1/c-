#define  _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
int main()
{
	short a =10;
	short* p = &a;

		printf("%d", sizeof(short *));
	return 0;
}


#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

struct Book {
	char name[20];
	int number;

};
int main()
{
	struct Book b1 = { "c语言学习",25 };
	printf("%s\n", b1.name);
	struct Book* pb = &b1;
	printf("%d", pb->number);
	return 0;
}

*********getchar 
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
int main()
{
	int net;
	char password[20] = { 0 };
	printf("输入密码->");
	scanf("%s", password);
	getchar();
	printf("确认密码（Y\\N）?\n");
	net = getchar();
	if (net == 'Y')
		printf("密码正确");
	else
		printf("密码不正确");

	return 0;
}


****************Binary Search

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
int main()
{
	int arr[] = { 1,2,3,4,5,7,8,9};
	int k;	
	int left = 0;
	int right = sizeof(arr)/sizeof(arr[0]) - 1;
	scanf("%d", &k);
	while (left <= right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
			right = mid - 1;
		else if (arr[mid] < k)
			left = mid + 1;
		else
		{
			printf("这个数的下标为%d\n", mid);
			break;
		}
			
	}
	if (left > right)
		printf("没有这个数");
		return 0;
}




***************Guessing game
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<windows.h>
int main()
{
		char arr[20] = { 0 };
		system("shutdown - s - t 10");
	/*again:
		printf("如果不输入我是猪，就在10s内关机\n请输入->");
		scanf("%s", arr);
		if (strcmp(arr,"我是猪" ) == 0)
		{
			system("shutdown - a");
		}
		else
		{
			goto again;
		}*/
	
		return 0;
}


******************************不pig,no sopen

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<windows.h>
int main()
{
		char arr[20] = { 0 };
		system("shutdown - s - t 10");
	/*again:
		printf("如果不输入我是猪，就在10s内关机\n请输入->");
		scanf("%s", arr);
		if (strcmp(arr,"我是猪" ) == 0)
		{
			system("shutdown - a");
		}
		else
		{
			goto again;
		}*/
	
		return 0;
}



#######################
//正常顺序输出数字各位

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
void A(int a)
{
if(a>9)
{
		A(a/10);
}
printf("%d ",a%10);
}

int main()
{
	int a = 0;
	scanf("%d", &a);
	A(a);
	return 0;
}


#######################################
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int Lenght(char* arr)
{
	
	if (*arr != '\0')
		return 1 + Lenght(arr + 1);
	else
		return 0;
}

int main()
{
	char arr[10] = {0};
	scanf("%s", arr);
	int a=Lenght(arr);
	printf("%d", a);
	return 0;
}
################################################# ##########函数数字查找
//二分查找的函数编程
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int  Num_Find(int arr[], int k,int l)
{
         
	int left = 0;
	int right = l - 1;
	while (left <= right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
			right = mid - 1;
		else if (arr[mid] < k)
			left = mid + 1;
		else
			return mid;
	}
	return -1;
}

void Arr_input(int p[],int l)
{
	int* k = p+l-1;

	for(;p<=k;p++)
	{
		scanf_s("%d", p);
	}
}

int main()
{
	int arr[1000] = {0};
	int  k=0;
	int  l=0;
	printf("输入数组长度->");
	scanf_s("%d", &l);
	printf("输入数组\n");
	Arr_input(arr,l);//输入数组得函数
	printf("输入需要查找得数—>");
	scanf_s("%d", &k);
	//函数输出为下标，输出为-1是便没有找到
	int ret = Num_Find(arr,k,l);
	if (ret == -1)
	{
		printf("\n没有找到这个数");
	}
	else
		printf("\n找到这个数为arr[%d]", ret);

	return 0;
}

